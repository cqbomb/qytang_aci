# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class UpdateTcaFaultMaskPayload(Mo):
    """
    

    """

    meta = ClassMeta("cobra.model.fault.UpdateTcaFaultMaskPayload")

    meta.moClassName = "faultUpdateTcaFaultMaskPayload"
    meta.rnFormat = "utfmpl-[%(deliveryDn)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x1
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.ThrValueFloat")
    meta.childClasses.add("cobra.model.fault.ThrValueSint64")
    meta.childClasses.add("cobra.model.fault.ThrValueUint32")
    meta.childClasses.add("cobra.model.fault.ThrValueSint16")
    meta.childClasses.add("cobra.model.fault.ThrValueSint32")
    meta.childClasses.add("cobra.model.fault.ThrValueDouble")
    meta.childClasses.add("cobra.model.fault.ThrValueUByte")
    meta.childClasses.add("cobra.model.fault.ThrValueSByte")
    meta.childClasses.add("cobra.model.fault.ThrValueTrigger")
    meta.childClasses.add("cobra.model.fault.ThrValueUint64")
    meta.childClasses.add("cobra.model.fault.Delegate")
    meta.childClasses.add("cobra.model.fault.ThrValueUint16")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueTrigger", "thrValTrigger-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueSint64", "thrValSint64-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueUint32", "thrValUint32-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueSint16", "thrValSint16-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueSint32", "thrValSint32-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueDouble", "thrValDouble-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueUint64", "thrValUint64-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueUint16", "thrValUint16-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueFloat", "thrValFloat-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueUByte", "thrValUByte-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.ThrValueSByte", "thrValSByte-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.frmwrk.ARelDelCont")
    meta.superClasses.add("cobra.model.pol.Cont")
    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.rnPrefixes = [
        ('utfmpl-', True),
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "counterId", "counterId", 15956, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("counterId", prop)

    prop = PropMeta("str", "deliveryDn", "deliveryDn", 15980, PropCategory.REGULAR)
    prop.label = "Dn for which event is being sent"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("deliveryDn", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 15959, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "newTcaMask", "newTcaMask", 15958, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("newTcaMask", prop)

    prop = PropMeta("str", "oldTcaMask", "oldTcaMask", 15957, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("avgCrit", "avg-severity-critical", 2199023255552)
    prop._addConstant("avgHigh", "avg-crossed-high-threshold", 68719476736)
    prop._addConstant("avgLow", "avg-crossed-low-threshold", 137438953472)
    prop._addConstant("avgMajor", "avg-severity-major", 1099511627776)
    prop._addConstant("avgMinor", "avg-severity-minor", 549755813888)
    prop._addConstant("avgRecovering", "avg-recovering", 34359738368)
    prop._addConstant("avgWarn", "avg-severity-warning", 274877906944)
    prop._addConstant("cumulativeCrit", "cumulative-severity-critical", 8192)
    prop._addConstant("cumulativeHigh", "cumulative-crossed-high-threshold", 256)
    prop._addConstant("cumulativeLow", "cumulative-crossed-low-threshold", 512)
    prop._addConstant("cumulativeMajor", "cumulative-severity-major", 4096)
    prop._addConstant("cumulativeMinor", "cumulative-severity-minor", 2048)
    prop._addConstant("cumulativeRecovering", "cumulative-recovering", 128)
    prop._addConstant("cumulativeWarn", "cumulative-severity-warning", 1024)
    prop._addConstant("lastReadingCrit", "lastreading-severity-critical", 64)
    prop._addConstant("lastReadingHigh", "lastreading-crossed-high-threshold", 2)
    prop._addConstant("lastReadingLow", "lastreading-crossed-low-threshold", 4)
    prop._addConstant("lastReadingMajor", "lastreading-severity-major", 32)
    prop._addConstant("lastReadingMinor", "lastreading-severity-minor", 16)
    prop._addConstant("lastReadingRecovering", "lastreading-recovering", 1)
    prop._addConstant("lastReadingWarn", "lastreading-severity-warning", 8)
    prop._addConstant("maxCrit", "max-severity-critical", 17179869184)
    prop._addConstant("maxHigh", "max-crossed-high-threshold", 536870912)
    prop._addConstant("maxLow", "max-crossed-low-threshold", 1073741824)
    prop._addConstant("maxMajor", "max-severity-major", 8589934592)
    prop._addConstant("maxMinor", "max-severity-minor", 4294967296)
    prop._addConstant("maxRecovering", "max-recovering", 268435456)
    prop._addConstant("maxWarn", "max-severity-warning", 2147483648)
    prop._addConstant("minCrit", "min-severity-critical", 134217728)
    prop._addConstant("minHigh", "min-crossed-high-threshold", 4194304)
    prop._addConstant("minLow", "min-crossed-low-threshold", 8388608)
    prop._addConstant("minMajor", "min-severity-major", 67108864)
    prop._addConstant("minMinor", "min-severity-minor", 33554432)
    prop._addConstant("minRecovering", "min-recovering", 2097152)
    prop._addConstant("minWarn", "min-severity-warning", 16777216)
    prop._addConstant("periodicCrit", "periodic-severity-critical", 1048576)
    prop._addConstant("periodicHigh", "periodic-crossed-high-threshold", 32768)
    prop._addConstant("periodicLow", "periodic-crossed-low-threshold", 65536)
    prop._addConstant("periodicMajor", "periodic-severity-major", 524288)
    prop._addConstant("periodicMinor", "periodic-severity-minor", 262144)
    prop._addConstant("periodicRecovering", "periodic-recovering", 16384)
    prop._addConstant("periodicWarn", "periodic-severity-warning", 131072)
    prop._addConstant("rateCrit", "rate-severity-critical", 36028797018963968)
    prop._addConstant("rateHigh", "rate-crossed-high-threshold", 1125899906842624)
    prop._addConstant("rateLow", "rate-crossed-low-threshold", 2251799813685248)
    prop._addConstant("rateMajor", "rate-severity-major", 18014398509481984)
    prop._addConstant("rateMinor", "rate-severity-minor", 9007199254740992)
    prop._addConstant("rateRecovering", "rate-recovering", 562949953421312)
    prop._addConstant("rateWarn", "rate-severity-warning", 4503599627370496)
    prop._addConstant("trendCrit", "trend-severity-critical", 281474976710656)
    prop._addConstant("trendHigh", "trend-crossed-high-threshold", 8796093022208)
    prop._addConstant("trendLow", "trend-crossed-low-threshold", 17592186044416)
    prop._addConstant("trendMajor", "trend-severity-major", 140737488355328)
    prop._addConstant("trendMinor", "trend-severity-minor", 70368744177664)
    prop._addConstant("trendRecovering", "trend-recovering", 4398046511104)
    prop._addConstant("trendWarn", "trend-severity-warning", 35184372088832)
    prop._addConstant("unspecified", None, 0)
    meta.props.add("oldTcaMask", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "statId", "statId", 15955, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("acllogFlowCounter", "flow-record-counter", 8610)
    prop._addConstant("acllogFlowCounterAg", "aggregated-flow-record-counter", 8628)
    prop._addConstant("actrlRuleHit", "rule-hits", 2408)
    prop._addConstant("actrlRuleHitAg", "aggregated-rule-hits", 2412)
    prop._addConstant("actrlRuleHitPart", "part-of-rule-hits", 2410)
    prop._addConstant("commWebConn", "web-connections", 6499)
    prop._addConstant("commWebConnAg", "aggregated-web-connections", 6503)
    prop._addConstant("commWebConnStates", "web-connections-state", 6553)
    prop._addConstant("commWebConnStatesAg", "aggregated-web-connections-state", 6557)
    prop._addConstant("commWebReq", "web-requests", 6445)
    prop._addConstant("commWebReqAg", "aggregated-web-requests", 6449)
    prop._addConstant("compHostStats", "host", 1132)
    prop._addConstant("compRcvdBytes", "received-bytes", 1186)
    prop._addConstant("compRcvdErrPkts", "received-error-packets", 1168)
    prop._addConstant("compRcvdPkts", "received-packets", 1150)
    prop._addConstant("compTrnsmtdBytes", "transmitted-bytes", 1240)
    prop._addConstant("compTrnsmtdErrPkts", "transmitted-error-packets", 1222)
    prop._addConstant("compTrnsmtdPkts", "transmitted-packets", 1204)
    prop._addConstant("coppAllow", "copp-allow-counters", 5659)
    prop._addConstant("coppDrop", "copp-drop-counters", 5677)
    prop._addConstant("dppEgrAllow", "egress-data-plane-policer-allow-counters", 8111)
    prop._addConstant("dppEgrDrop", "egress-data-plane-policer-drop-counters", 8129)
    prop._addConstant("dppIngrAllow", "ingress-data-plane-policer-allow-counters", 8075)
    prop._addConstant("dppIngrDrop", "ingress-data-plane-policer-drop-counters", 8093)
    prop._addConstant("eqptEgrBytes", "egress-bytes", 3124)
    prop._addConstant("eqptEgrDropPkts", "egress-drop-packets", 3143)
    prop._addConstant("eqptEgrPkts", "egress-packets", 3105)
    prop._addConstant("eqptEgrTotal", "egress", 3181)
    prop._addConstant("eqptFanStats", "fan", 3318)
    prop._addConstant("eqptFruPower", "fru-power", 3280)
    prop._addConstant("eqptIngrBytes", "ingress-bytes", 3048)
    prop._addConstant("eqptIngrDropPkts", "ingress-drop-packets", 3086)
    prop._addConstant("eqptIngrPkts", "ingress-packets", 3010)
    prop._addConstant("eqptIngrStorm", "ingress-storm-ctrl", 5937)
    prop._addConstant("eqptIngrTotal", "ingress", 3162)
    prop._addConstant("eqptIngrUnkBytes", "ingress-unknown-bytes", 3067)
    prop._addConstant("eqptIngrUnkPkts", "ingress-unknown-packets", 3029)
    prop._addConstant("eqptPsPower", "power-supply", 3299)
    prop._addConstant("eqptTemp", "temperature", 3256)
    prop._addConstant("eqptcapacityBDEntry", "bridge-domain-entry", 2870)
    prop._addConstant("eqptcapacityL2Entry", "layer2-entry", 2889)
    prop._addConstant("eqptcapacityL2Usage", "layer2-entries-usage-count", 6689)
    prop._addConstant("eqptcapacityL3Entry", "layer3-entry", 2909)
    prop._addConstant("eqptcapacityL3Usage", "layer3-entries-usage-count", 6725)
    prop._addConstant("eqptcapacityL3UsageCap", "layer3-entries-max-capacity", 6907)
    prop._addConstant("eqptcapacityMcastEntry", "multicast-entry", 2947)
    prop._addConstant("eqptcapacityMcastUsage", "multicast-entries-usage", 6671)
    prop._addConstant("eqptcapacityPolEntry", "policy-entry", 2928)
    prop._addConstant("eqptcapacityPolUsage", "policy-entries-usage", 6707)
    prop._addConstant("eqptcapacityPrefixEntries", "prefix-(i-pv4-and-i-pv6)-entries", 6626)
    prop._addConstant("eqptcapacityRouterIpEntries", "router-ip-(i-pv4-and-i-pv6)-entries", 6761)
    prop._addConstant("eqptcapacityVlanUsage", "vlan-entries-usage", 6743)
    prop._addConstant("eqptcapacityVlanXlateEntries", "vlan-xlate-entries", 7052)
    prop._addConstant("fabricAcDropExcess", "drop-packets", 423)
    prop._addConstant("fabricAcTxRx", "packets", 404)
    prop._addConstant("fabricNodeHealth", "node-health", 462)
    prop._addConstant("fabricOverallHealth", "overall-fabric-health", 444)
    prop._addConstant("fvOverallHealth", "overall-tenant-health", 2009)
    prop._addConstant("infraClusterStats", "cluster", 4469)
    prop._addConstant("infraReplicaStats", "replica", 4490)
    prop._addConstant("isisFtagTreeStats", "ftag", 2807)
    prop._addConstant("isisTreeCalcNodeStats", "ftag-global-node", 2788)
    prop._addConstant("isisTreeCalcStats", "ftag-global", 2769)
    prop._addConstant("l2EgrBytes", "egress-bytes", 7382)
    prop._addConstant("l2EgrBytesAg", "aggregated-egress-bytes", 7386)
    prop._addConstant("l2EgrBytesPart", "part-of-egress-bytes", 7384)
    prop._addConstant("l2EgrPkts", "egress-packets", 7328)
    prop._addConstant("l2EgrPktsAg", "aggregated-egress-packets", 7332)
    prop._addConstant("l2EgrPktsPart", "part-of-egress-packets", 7330)
    prop._addConstant("l2IngrBytes", "ingress-bytes", 3494)
    prop._addConstant("l2IngrBytesAg", "aggregated-ingress-bytes", 3498)
    prop._addConstant("l2IngrBytesPart", "part-of-ingress-bytes", 3496)
    prop._addConstant("l2IngrPkts", "ingress-packets", 3439)
    prop._addConstant("l2IngrPktsAg", "aggregated-ingress-packets", 3443)
    prop._addConstant("l2IngrPktsPart", "part-of-ingress-packets", 3441)
    prop._addConstant("opflexIDEpBcastPkts", "broadcast-packets", 5362)
    prop._addConstant("opflexIDEpDfwConn", "dfw-connection-statistics", 6390)
    prop._addConstant("opflexIDEpDfwConnDenied", "dfw-connection-denied-statistics", 6408)
    prop._addConstant("opflexIDEpDfwPktDrop", "dfw-packet-drop-statistics", 6426)
    prop._addConstant("opflexIDEpPolicyDrop", "epg-policy-drop-statistics", 8044)
    prop._addConstant("opflexIDEpRxBytes", "received-bytes", 1045)
    prop._addConstant("opflexIDEpRxPkts", "received-packets", 1026)
    prop._addConstant("opflexIDEpTxBytes", "transmitted-bytes", 1083)
    prop._addConstant("opflexIDEpTxPkts", "transmitted-packets", 1064)
    prop._addConstant("procCPU", "cpu-utilization", 3917)
    prop._addConstant("procMem", "memory", 3936)
    prop._addConstant("procProcCPU", "process-cpu", 3877)
    prop._addConstant("procProcMem", "process-memory", 3896)
    prop._addConstant("procSysCPU", "system-cpu", 3839)
    prop._addConstant("procSysLoad", "system-load", 3820)
    prop._addConstant("procSysMem", "system-memory", 3858)
    prop._addConstant("qosmEgrPkts", "egress-packets", 2372)
    prop._addConstant("qosmIngrPkts", "ingress-packets", 2353)
    prop._addConstant("unspecified", None, 0)
    prop._addConstant("vnsRxPkts", "rx-packet-counters", 1509)
    prop._addConstant("vnsTxPkts", "tx-packet-counters", 1543)
    meta.props.add("statId", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "timestamp", "timestamp", 15965, PropCategory.REGULAR)
    prop.label = "Timestamp when this event was generated"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("timestamp", prop)

    prop = PropMeta("str", "type", "type", 15966, PropCategory.REGULAR)
    prop.label = "Timestamp when this event was generated"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("control", "control", 8)
    prop._addConstant("fault-ack", "fault-ack", 4)
    prop._addConstant("fault-cleanup", "fault-cleanup", 3)
    prop._addConstant("fault-delegate", "fault-delegate", 2)
    prop._addConstant("fault-process", "fault-process", 1)
    prop._addConstant("health-score", "health-score", 7)
    prop._addConstant("health-score-weight", "health-score-weight", 9)
    prop._addConstant("rel-log", "rel-log", 5)
    prop._addConstant("threshold-fault", "threshold-fault", 6)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("type", prop)

    meta.namingProps.append(getattr(meta.props, "deliveryDn"))
    getattr(meta.props, "deliveryDn").needDelimiter = True

    def __init__(self, parentMoOrDn, deliveryDn, markDirty=True, **creationProps):
        namingVals = [deliveryDn]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
