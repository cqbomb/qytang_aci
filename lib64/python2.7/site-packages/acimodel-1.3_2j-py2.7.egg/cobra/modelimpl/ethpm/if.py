# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class If(Mo):
    meta = ClassMeta("cobra.model.ethpm.If")

    meta.isAbstract = True
    meta.moClassName = "ethpmIf"


    meta.moClassName = "ethpmIf"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "Interface"
    meta.writeAccessMask = 0x100000000001
    meta.readAccessMask = 0x100000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.ethpm.PortCap")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.ethpm.PortCap", "portcap"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.concreteSubClasses.add("cobra.model.ethpm.PhysIf")
    meta.concreteSubClasses.add("cobra.model.ethpm.AggrIf")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "accessVlan", "accessVlan", 3810, PropCategory.REGULAR)
    prop.label = "Access Vlan"
    prop.isOper = True
    meta.props.add("accessVlan", prop)

    prop = PropMeta("str", "allowedVlans", "allowedVlans", 3821, PropCategory.REGULAR)
    prop.label = "Allowed Vlans"
    prop.isOper = True
    meta.props.add("allowedVlans", prop)

    prop = PropMeta("str", "backplaneMac", "backplaneMac", 3805, PropCategory.REGULAR)
    prop.label = "Backplane MAC"
    prop.isOper = True
    meta.props.add("backplaneMac", prop)

    prop = PropMeta("str", "bundleBupId", "bundleBupId", 3829, PropCategory.REGULAR)
    prop.label = "Bundle Bringup Id"
    prop.isOper = True
    meta.props.add("bundleBupId", prop)

    prop = PropMeta("str", "bundleIndex", "bundleIndex", 3824, PropCategory.REGULAR)
    prop.label = "Bundle Index"
    prop.isOper = True
    meta.props.add("bundleIndex", prop)

    prop = PropMeta("str", "cfgAccessVlan", "cfgAccessVlan", 3813, PropCategory.REGULAR)
    prop.label = "Port Config Access Vlan"
    prop.isOper = True
    meta.props.add("cfgAccessVlan", prop)

    prop = PropMeta("str", "cfgNativeVlan", "cfgNativeVlan", 3812, PropCategory.REGULAR)
    prop.label = "Port Config Native Vlan"
    prop.isOper = True
    meta.props.add("cfgNativeVlan", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "currErrIndex", "currErrIndex", 3826, PropCategory.REGULAR)
    prop.label = "Current Error Index"
    prop.isOper = True
    meta.props.add("currErrIndex", prop)

    prop = PropMeta("str", "diags", "diags", 3833, PropCategory.REGULAR)
    prop.label = "Port Diags Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "none"
    prop._addConstant("ddm", "ddm", 3)
    prop._addConstant("dom", "dom", 2)
    prop._addConstant("none", "none", 1)
    meta.props.add("diags", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "encap", "encap", 3819, PropCategory.REGULAR)
    prop.label = "Port Encap"
    prop.isOper = True
    meta.props.add("encap", prop)

    prop = PropMeta("str", "errDisTimerRunning", "errDisTimerRunning", 3828, PropCategory.REGULAR)
    prop.label = "Error Disable Recovery Time Running"
    prop.isOper = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("errDisTimerRunning", prop)

    prop = PropMeta("str", "errVlanStatusHt", "errVlanStatusHt", 3830, PropCategory.REGULAR)
    prop.label = "Port Per Vlan Error State"
    prop.isOper = True
    meta.props.add("errVlanStatusHt", prop)

    prop = PropMeta("str", "errVlans", "errVlans", 3823, PropCategory.REGULAR)
    prop.label = "Errored Vlans"
    prop.isOper = True
    meta.props.add("errVlans", prop)

    prop = PropMeta("str", "hwBdId", "hwBdId", 3840, PropCategory.REGULAR)
    prop.label = "Hw Bd Id (allocated for L3 Ports, Port-channels)"
    prop.isOper = True
    prop.range = [(1, 4096)]
    meta.props.add("hwBdId", prop)

    prop = PropMeta("str", "intfT", "intfT", 3832, PropCategory.REGULAR)
    prop.label = "Interface Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "phy"
    prop._addConstant("phy", "phy", 1)
    prop._addConstant("phy-shared", "phy-shared", 2)
    meta.props.add("intfT", prop)

    prop = PropMeta("str", "iod", "iod", 3820, PropCategory.REGULAR)
    prop.label = "Iod"
    prop.isOper = True
    meta.props.add("iod", prop)

    prop = PropMeta("str", "lastErrors", "lastErrors", 3827, PropCategory.REGULAR)
    prop.label = "Last Seen Errors"
    prop.isOper = True
    meta.props.add("lastErrors", prop)

    prop = PropMeta("str", "lastLinkStChg", "lastLinkStChg", 3808, PropCategory.REGULAR)
    prop.label = "Last Link State Change"
    prop.isOper = True
    meta.props.add("lastLinkStChg", prop)

    prop = PropMeta("str", "media", "media", 3818, PropCategory.REGULAR)
    prop.label = "Port Media"
    prop.isOper = True
    meta.props.add("media", prop)

    prop = PropMeta("str", "nativeVlan", "nativeVlan", 3811, PropCategory.REGULAR)
    prop.label = "Port Native Vlan"
    prop.isOper = True
    meta.props.add("nativeVlan", prop)

    prop = PropMeta("str", "numOfSI", "numOfSI", 3838, PropCategory.REGULAR)
    prop.label = "Number of Sub-interfaces"
    prop.isOper = True
    meta.props.add("numOfSI", prop)

    prop = PropMeta("str", "operBitset", "operBitset", 3815, PropCategory.REGULAR)
    prop.label = "Port Oper Bitset"
    prop.isOper = True
    meta.props.add("operBitset", prop)

    prop = PropMeta("str", "operDceMode", "operDceMode", 3831, PropCategory.REGULAR)
    prop.label = "Operational Dce Mode"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "off"
    prop._addConstant("auto", "auto", 3)
    prop._addConstant("core", "core", 1)
    prop._addConstant("edge", "edge", 2)
    prop._addConstant("off", "off", 4)
    meta.props.add("operDceMode", prop)

    prop = PropMeta("str", "operDuplex", "operDuplex", 3801, PropCategory.REGULAR)
    prop.label = "Operational Duplex"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "auto"
    prop._addConstant("auto", "auto", 1)
    prop._addConstant("full", "full", 2)
    prop._addConstant("half", "half", 3)
    meta.props.add("operDuplex", prop)

    prop = PropMeta("str", "operEEERxWkTime", "operEEERxWkTime", 3836, PropCategory.REGULAR)
    prop.label = "Operational Port EEE Rx Time"
    prop.isOper = True
    meta.props.add("operEEERxWkTime", prop)

    prop = PropMeta("str", "operEEEState", "operEEEState", 3834, PropCategory.REGULAR)
    prop.label = "Operational Port EEE State"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "not-applicable"
    prop._addConstant("disable", "disable", 2)
    prop._addConstant("disagreed", "disagreed", 3)
    prop._addConstant("enable", "enable", 1)
    prop._addConstant("not-applicable", "not-applicable", 4)
    meta.props.add("operEEEState", prop)

    prop = PropMeta("str", "operEEETxWkTime", "operEEETxWkTime", 3835, PropCategory.REGULAR)
    prop.label = "Operational Port EEE Tx Time"
    prop.isOper = True
    meta.props.add("operEEETxWkTime", prop)

    prop = PropMeta("str", "operErrDisQual", "operErrDisQual", 3798, PropCategory.REGULAR)
    prop.label = "Operational Error Disable Qualifier"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "admin-down"
    prop._addConstant("admin-config-change", "admincfgchng", 44)
    prop._addConstant("admin-down", "disabled", 2)
    prop._addConstant("auth-fail", "xcvrauthfailed", 54)
    prop._addConstant("auth-pending", "authpending", 55)
    prop._addConstant("bpdu-guard-err-disable", "bpduguard-errdisable", 72)
    prop._addConstant("cap-absent", "capabsent", 49)
    prop._addConstant("channel-admin-down", "channeldown", 24)
    prop._addConstant("channel-err-disabled", "channel-error-disabled-err-disabled", 25)
    prop._addConstant("channel-membership-update-in-progress", "channelupdate", 28)
    prop._addConstant("configuration-incomplete", "incomplete-config", 79)
    prop._addConstant("diag-failure-errdisable", "diag-failure-errdisable", 80)
    prop._addConstant("domain-max-retransmission-failure", "isolated", 38)
    prop._addConstant("epm-learn-err-disable", "epmlearn-errdisable", 76)
    prop._addConstant("err-disabled", "err-disabled", 9)
    prop._addConstant("err-disabled-ip-conflict", "conflcterrdis", 18)
    prop._addConstant("ethernet-interface-down", "interface-parentethdown", 43)
    prop._addConstant("ethernet-link-down", "parentethdown", 42)
    prop._addConstant("fabric-track", "fabrictrack", 78)
    prop._addConstant("fail", "fail", 4)
    prop._addConstant("fcot-chksum-err", "sfp-checksum-error", 67)
    prop._addConstant("fcot-no-present", "fcotabsent", 32)
    prop._addConstant("fcot-vendor-not-supported", "sfp-vendor-not-supported-err-disabled", 33)
    prop._addConstant("fex-sfp-invalid", "fex-fabric-sfp-invalid", 60)
    prop._addConstant("handshake-fail-errdisable", "intfailerrdis", 74)
    prop._addConstant("hot-standby-in-bundle", "htstdbyinbndl", 73)
    prop._addConstant("hw-fail", "faulty", 7)
    prop._addConstant("inactive", "inactive", 23)
    prop._addConstant("incompatible-admin-mode", "errdisabledincompatportmode-err-disabled", 34)
    prop._addConstant("incompatible-admin-speed", "errdisabledincompatportspeed-err-disabled", 35)
    prop._addConstant("incompatible-fecmode", "errdisabledincompatfecmode-err-disabled", 81)
    prop._addConstant("initializing", "init", 22)
    prop._addConstant("interface-removed", "ifremoved", 31)
    prop._addConstant("invalid-sat-fabric-if", "invalidfbif", 59)
    prop._addConstant("ipqos-dcbxp-compat-failure", "ipqosdcbxpcompatfailure", 19)
    prop._addConstant("link-down", "parentethdown", 3)
    prop._addConstant("link-failure", "notconnect", 20)
    prop._addConstant("link-flap-err", "linkflaperr", 17)
    prop._addConstant("link-up", "link-up-connected", 6)
    prop._addConstant("loopback-diag-failure", "faulty", 11)
    prop._addConstant("loopback-isolation", "isolated", 39)
    prop._addConstant("mac-pinning", "macpinning", 77)
    prop._addConstant("mcp-loop-err-disable", "mcploop-errdisable", 75)
    prop._addConstant("module-removed", "modremoved", 45)
    prop._addConstant("no-license", "portlicntavl", 5)
    prop._addConstant("non-sticky-externally-disabled", "servdisab", 65)
    prop._addConstant("none", "connected", 47)
    prop._addConstant("offline", "offline", 21)
    prop._addConstant("parent-admin-down", "admindown-parentdown", 30)
    prop._addConstant("parent-down", "parentdown", 29)
    prop._addConstant("port-channel-members-down", "noopermembers", 41)
    prop._addConstant("proto-port-suspend", "portsuspnd", 27)
    prop._addConstant("router-mac-failure", "routrmacfail", 63)
    prop._addConstant("sat-fabric-if-down", "fabrcifdown", 58)
    prop._addConstant("sat-incompat-topo", "fex-identity-mismatch", 52)
    prop._addConstant("sat-not-configured", "fex-not-configured", 53)
    prop._addConstant("sdp-timeout", "sdp-timeout/sfp-mismatch", 51)
    prop._addConstant("sfp-eth-compliant-err", "xcvrethcomplianceerr", 50)
    prop._addConstant("sfp-missing", "sfpabsent", 10)
    prop._addConstant("sfp-speed-mismatch", "xcvrspeedmismatch", 66)
    prop._addConstant("suspend-by-mtu", "mtufailure", 61)
    prop._addConstant("suspend-by-vpc", "suspndbyvpc", 62)
    prop._addConstant("suspended", "suspnd", 26)
    prop._addConstant("suspended-by-mode", "suspended-by-mode", 36)
    prop._addConstant("suspended-by-speed", "suspended-by-speed", 37)
    prop._addConstant("suspended-due-to-minlinks", "suspendedminlinks", 56)
    prop._addConstant("suspended-due-to-no-lacp-pdus", "suspended(no-lacp-pdus)", 57)
    prop._addConstant("sw-fail", "faulty", 8)
    prop._addConstant("udld-aggressive-mode-link-failed", "udldaggr", 16)
    prop._addConstant("udld-empty-echo", "udldempecho", 15)
    prop._addConstant("udld-neighbor-mismatch", "udldmismatch", 14)
    prop._addConstant("udld-tx-rx-loop", "udldloop", 13)
    prop._addConstant("udld-unidir-detected", "udldunidir", 12)
    prop._addConstant("unknown", "down", 0)
    prop._addConstant("up", "up", 1)
    prop._addConstant("upgrade-in-progress", "modupgrade", 40)
    prop._addConstant("vpc-cfg-in-progress", "vpcconfiginprogress", 70)
    prop._addConstant("vpc-no-response-from-peer", "norespfrmvpc", 71)
    prop._addConstant("vpc-peer-link-down", "vpcpeerlinkdown", 69)
    prop._addConstant("vrf-unusable", "vrfunusable", 46)
    prop._addConstant("xcvr-auth-failed", "xcvrauthfailed", 64)
    prop._addConstant("xcvr-initializing", "sfpinit", 48)
    prop._addConstant("xcvr-invalid", "transceiver-validation-failed", 68)
    meta.props.add("operErrDisQual", prop)

    prop = PropMeta("str", "operFlowCtrl", "operFlowCtrl", 3802, PropCategory.REGULAR)
    prop.label = "Operational Flow Control"
    prop.isOper = True
    prop.range = [(0, 15)]
    prop.defaultValue = 15
    prop.defaultValueStr = "15"
    meta.props.add("operFlowCtrl", prop)

    prop = PropMeta("str", "operMdix", "operMdix", 3825, PropCategory.REGULAR)
    prop.label = "Port Oper Mdix Mode"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "auto"
    prop._addConstant("auto", "auto", 1)
    prop._addConstant("mdi", "mdi", 2)
    prop._addConstant("mdi-x", "mdi-x", 3)
    meta.props.add("operMdix", prop)

    prop = PropMeta("str", "operMode", "operMode", 3800, PropCategory.REGULAR)
    prop.label = "Operational Mode"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "trunk"
    prop._addConstant("access", "access", 1)
    prop._addConstant("fex-fabric", "fex-fabric", 3)
    prop._addConstant("trunk", "trunk", 2)
    prop._addConstant("unknown", "unknown", 0)
    meta.props.add("operMode", prop)

    prop = PropMeta("str", "operPhyEnSt", "operPhyEnSt", 3803, PropCategory.REGULAR)
    prop.label = "Operational Physical Port Enable State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("link-up", "link-up", 3)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("up", "up", 2)
    meta.props.add("operPhyEnSt", prop)

    prop = PropMeta("str", "operRouterMac", "operRouterMac", 3806, PropCategory.REGULAR)
    prop.label = "Operational Router MAC"
    prop.isOper = True
    meta.props.add("operRouterMac", prop)

    prop = PropMeta("str", "operSpeed", "operSpeed", 3799, PropCategory.REGULAR)
    prop.label = "Operational Speed"
    prop.isOper = True
    prop.defaultValue = 7
    prop.defaultValueStr = "inherit"
    prop._addConstant("100G", "100-gbps", 6)
    prop._addConstant("100M", "100-mbps", 1)
    prop._addConstant("10G", "10-gbps", 3)
    prop._addConstant("1G", "1-gbps", 2)
    prop._addConstant("25G", "25-gbps", 4)
    prop._addConstant("40G", "40-gbps", 5)
    prop._addConstant("inherit", "inherit", 7)
    prop._addConstant("unknown", "unspecified", 0)
    meta.props.add("operSpeed", prop)

    prop = PropMeta("str", "operSt", "operSt", 3795, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("link-up", "link-up", 3)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 3796, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "admin-down"
    prop._addConstant("admin-config-change", "admincfgchng", 44)
    prop._addConstant("admin-down", "disabled", 2)
    prop._addConstant("auth-fail", "xcvrauthfailed", 54)
    prop._addConstant("auth-pending", "authpending", 55)
    prop._addConstant("bpdu-guard-err-disable", "bpduguard-errdisable", 72)
    prop._addConstant("cap-absent", "capabsent", 49)
    prop._addConstant("channel-admin-down", "channeldown", 24)
    prop._addConstant("channel-err-disabled", "channel-error-disabled-err-disabled", 25)
    prop._addConstant("channel-membership-update-in-progress", "channelupdate", 28)
    prop._addConstant("configuration-incomplete", "incomplete-config", 79)
    prop._addConstant("diag-failure-errdisable", "diag-failure-errdisable", 80)
    prop._addConstant("domain-max-retransmission-failure", "isolated", 38)
    prop._addConstant("epm-learn-err-disable", "epmlearn-errdisable", 76)
    prop._addConstant("err-disabled", "err-disabled", 9)
    prop._addConstant("err-disabled-ip-conflict", "conflcterrdis", 18)
    prop._addConstant("ethernet-interface-down", "interface-parentethdown", 43)
    prop._addConstant("ethernet-link-down", "parentethdown", 42)
    prop._addConstant("fabric-track", "fabrictrack", 78)
    prop._addConstant("fail", "fail", 4)
    prop._addConstant("fcot-chksum-err", "sfp-checksum-error", 67)
    prop._addConstant("fcot-no-present", "fcotabsent", 32)
    prop._addConstant("fcot-vendor-not-supported", "sfp-vendor-not-supported-err-disabled", 33)
    prop._addConstant("fex-sfp-invalid", "fex-fabric-sfp-invalid", 60)
    prop._addConstant("handshake-fail-errdisable", "intfailerrdis", 74)
    prop._addConstant("hot-standby-in-bundle", "htstdbyinbndl", 73)
    prop._addConstant("hw-fail", "faulty", 7)
    prop._addConstant("inactive", "inactive", 23)
    prop._addConstant("incompatible-admin-mode", "errdisabledincompatportmode-err-disabled", 34)
    prop._addConstant("incompatible-admin-speed", "errdisabledincompatportspeed-err-disabled", 35)
    prop._addConstant("incompatible-fecmode", "errdisabledincompatfecmode-err-disabled", 81)
    prop._addConstant("initializing", "init", 22)
    prop._addConstant("interface-removed", "ifremoved", 31)
    prop._addConstant("invalid-sat-fabric-if", "invalidfbif", 59)
    prop._addConstant("ipqos-dcbxp-compat-failure", "ipqosdcbxpcompatfailure", 19)
    prop._addConstant("link-down", "parentethdown", 3)
    prop._addConstant("link-failure", "notconnect", 20)
    prop._addConstant("link-flap-err", "linkflaperr", 17)
    prop._addConstant("link-up", "link-up-connected", 6)
    prop._addConstant("loopback-diag-failure", "faulty", 11)
    prop._addConstant("loopback-isolation", "isolated", 39)
    prop._addConstant("mac-pinning", "macpinning", 77)
    prop._addConstant("mcp-loop-err-disable", "mcploop-errdisable", 75)
    prop._addConstant("module-removed", "modremoved", 45)
    prop._addConstant("no-license", "portlicntavl", 5)
    prop._addConstant("non-sticky-externally-disabled", "servdisab", 65)
    prop._addConstant("none", "connected", 47)
    prop._addConstant("offline", "offline", 21)
    prop._addConstant("parent-admin-down", "admindown-parentdown", 30)
    prop._addConstant("parent-down", "parentdown", 29)
    prop._addConstant("port-channel-members-down", "noopermembers", 41)
    prop._addConstant("proto-port-suspend", "portsuspnd", 27)
    prop._addConstant("router-mac-failure", "routrmacfail", 63)
    prop._addConstant("sat-fabric-if-down", "fabrcifdown", 58)
    prop._addConstant("sat-incompat-topo", "fex-identity-mismatch", 52)
    prop._addConstant("sat-not-configured", "fex-not-configured", 53)
    prop._addConstant("sdp-timeout", "sdp-timeout/sfp-mismatch", 51)
    prop._addConstant("sfp-eth-compliant-err", "xcvrethcomplianceerr", 50)
    prop._addConstant("sfp-missing", "sfpabsent", 10)
    prop._addConstant("sfp-speed-mismatch", "xcvrspeedmismatch", 66)
    prop._addConstant("suspend-by-mtu", "mtufailure", 61)
    prop._addConstant("suspend-by-vpc", "suspndbyvpc", 62)
    prop._addConstant("suspended", "suspnd", 26)
    prop._addConstant("suspended-by-mode", "suspended-by-mode", 36)
    prop._addConstant("suspended-by-speed", "suspended-by-speed", 37)
    prop._addConstant("suspended-due-to-minlinks", "suspendedminlinks", 56)
    prop._addConstant("suspended-due-to-no-lacp-pdus", "suspended(no-lacp-pdus)", 57)
    prop._addConstant("sw-fail", "faulty", 8)
    prop._addConstant("udld-aggressive-mode-link-failed", "udldaggr", 16)
    prop._addConstant("udld-empty-echo", "udldempecho", 15)
    prop._addConstant("udld-neighbor-mismatch", "udldmismatch", 14)
    prop._addConstant("udld-tx-rx-loop", "udldloop", 13)
    prop._addConstant("udld-unidir-detected", "udldunidir", 12)
    prop._addConstant("unknown", "down", 0)
    prop._addConstant("up", "up", 1)
    prop._addConstant("upgrade-in-progress", "modupgrade", 40)
    prop._addConstant("vpc-cfg-in-progress", "vpcconfiginprogress", 70)
    prop._addConstant("vpc-no-response-from-peer", "norespfrmvpc", 71)
    prop._addConstant("vpc-peer-link-down", "vpcpeerlinkdown", 69)
    prop._addConstant("vrf-unusable", "vrfunusable", 46)
    prop._addConstant("xcvr-auth-failed", "xcvrauthfailed", 64)
    prop._addConstant("xcvr-initializing", "sfpinit", 48)
    prop._addConstant("xcvr-invalid", "transceiver-validation-failed", 68)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "operStQualCode", "operStQualCode", 3797, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier Code"
    prop.isOper = True
    meta.props.add("operStQualCode", prop)

    prop = PropMeta("str", "operVlans", "operVlans", 3822, PropCategory.REGULAR)
    prop.label = "Operational Vlans"
    prop.isOper = True
    meta.props.add("operVlans", prop)

    prop = PropMeta("str", "osSum", "osSum", 3794, PropCategory.REGULAR)
    prop.label = "Operational State Summary"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "ok"
    prop._addConstant("degraded", "degraded", 3)
    prop._addConstant("failed", "failed", 0)
    prop._addConstant("initializing", "initializing", 1)
    prop._addConstant("ok", "ok", 4)
    prop._addConstant("resetting", "resetting", 2)
    meta.props.add("osSum", prop)

    prop = PropMeta("str", "portCfgWaitFlags", "portCfgWaitFlags", 3809, PropCategory.REGULAR)
    prop.label = "Config Wait Flags"
    prop.isOper = True
    meta.props.add("portCfgWaitFlags", prop)

    prop = PropMeta("str", "primaryVlan", "primaryVlan", 3814, PropCategory.REGULAR)
    prop.label = "Port Primary-vlan"
    prop.isOper = True
    meta.props.add("primaryVlan", prop)

    prop = PropMeta("str", "resetCtr", "resetCtr", 3817, PropCategory.REGULAR)
    prop.label = "Reset Counter"
    prop.isOper = True
    meta.props.add("resetCtr", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "siList", "siList", 3839, PropCategory.REGULAR)
    prop.label = "Configured Sub-interface Ids"
    prop.isOper = True
    meta.props.add("siList", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "txT", "txT", 3807, PropCategory.REGULAR)
    prop.label = "Transmit Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "unknown"
    prop._addConstant("10GBASE-ER", "10gbase-er", 8)
    prop._addConstant("10GBASE-EW", "10gbase-ew", 12)
    prop._addConstant("10GBASE-LR", "10gbase-lr", 7)
    prop._addConstant("10GBASE-LW", "10gbase-lw", 11)
    prop._addConstant("10GBASE-LX4", "10gbase-lx4", 9)
    prop._addConstant("10GBASE-SR", "10gbase-sr", 6)
    prop._addConstant("10GBASE-SW", "10gbase-sw", 10)
    prop._addConstant("EL", "el", 5)
    prop._addConstant("LC", "lc", 4)
    prop._addConstant("LL", "ll", 2)
    prop._addConstant("SN", "sn", 3)
    prop._addConstant("unknown", "unknown", 1)
    meta.props.add("txT", prop)

    prop = PropMeta("str", "usage", "usage", 3804, PropCategory.REGULAR)
    prop.label = "Port Usage"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "discovery"
    prop._addConstant("blacklist", "black-listed", 32)
    prop._addConstant("controller", "controller", 16)
    prop._addConstant("discovery", "discovery", 1)
    prop._addConstant("epg", "epg", 2)
    prop._addConstant("fabric", "fabric", 4)
    prop._addConstant("infra", "infra", 8)
    prop._addConstant("out-of-service", "out-of-service", 128)
    prop._addConstant("span", "span", 64)
    meta.props.add("usage", prop)

    prop = PropMeta("str", "userCfgdFlags", "userCfgdFlags", 3837, PropCategory.REGULAR)
    prop.label = "Port User Config Flags"
    prop.isOper = True
    meta.props.add("userCfgdFlags", prop)

    prop = PropMeta("str", "vdcId", "vdcId", 3816, PropCategory.REGULAR)
    prop.label = "Vdc Id"
    prop.isOper = True
    prop.range = [(1, 4096)]
    meta.props.add("vdcId", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
