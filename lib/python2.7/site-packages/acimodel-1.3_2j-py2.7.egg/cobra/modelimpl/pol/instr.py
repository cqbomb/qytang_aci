# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class Instr(Mo):
    meta = ClassMeta("cobra.model.pol.Instr")

    meta.isAbstract = True
    meta.moClassName = "polInstr"


    meta.moClassName = "polInstr"
    meta.rnFormat = ""
    meta.category = MoCategory.REGULAR
    meta.label = "None"
    meta.writeAccessMask = 0x0
    meta.readAccessMask = 0x1
    meta.isDomainable = False
    meta.isReadOnly = False
    meta.isConfigurable = True
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Delegate")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Delegate", "fd-"))

    meta.superClasses.add("cobra.model.naming.NamedObject")
    meta.superClasses.add("cobra.model.pol.Obj")

    meta.concreteSubClasses.add("cobra.model.rtmap.SetRegComm")
    meta.concreteSubClasses.add("cobra.model.ospf.DefRtLeakP")
    meta.concreteSubClasses.add("cobra.model.eqpt.SlotP")
    meta.concreteSubClasses.add("cobra.model.isis.RtSum")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchExtComm")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchNhIf")
    meta.concreteSubClasses.add("cobra.model.bgp.Gr")
    meta.concreteSubClasses.add("cobra.model.ipv4.Nexthop")
    meta.concreteSubClasses.add("cobra.model.isis.IntraLeakP")
    meta.concreteSubClasses.add("cobra.model.topoctrl.LoopProtectP")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtType")
    meta.concreteSubClasses.add("cobra.model.l1.EeeP")
    meta.concreteSubClasses.add("cobra.model.l2.MacCktEp")
    meta.concreteSubClasses.add("cobra.model.actrl.Scope")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtNh")
    meta.concreteSubClasses.add("cobra.model.rtregcom.Item")
    meta.concreteSubClasses.add("cobra.model.ospf.LeakCtrlP")
    meta.concreteSubClasses.add("cobra.model.topoctrl.LbP")
    meta.concreteSubClasses.add("cobra.model.bgp.InvalidRREp")
    meta.concreteSubClasses.add("cobra.model.bgp.RtCtrlP")
    meta.concreteSubClasses.add("cobra.model.bgp.InterLeakP")
    meta.concreteSubClasses.add("cobra.model.isis.LeakCtrlP")
    meta.concreteSubClasses.add("cobra.model.eigrp.SummPol")
    meta.concreteSubClasses.add("cobra.model.topoctrl.VxlanP")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetDampeningCtrl")
    meta.concreteSubClasses.add("cobra.model.topoctrl.ShardChP")
    meta.concreteSubClasses.add("cobra.model.ipv6.NexthopStub")
    meta.concreteSubClasses.add("cobra.model.topoctrl.EndpointControlP")
    meta.concreteSubClasses.add("cobra.model.rtpfx.Rule")
    meta.concreteSubClasses.add("cobra.model.bgp.DefRtLeakP")
    meta.concreteSubClasses.add("cobra.model.coop.RepP")
    meta.concreteSubClasses.add("cobra.model.eqpt.PsgP")
    meta.concreteSubClasses.add("cobra.model.fv.RInfoHolder")
    meta.concreteSubClasses.add("cobra.model.ospfv3.InterLeakP")
    meta.concreteSubClasses.add("cobra.model.actrl.SnmpRule")
    meta.concreteSubClasses.add("cobra.model.rtpfx.Entry")
    meta.concreteSubClasses.add("cobra.model.bgp.MaxPfxP")
    meta.concreteSubClasses.add("cobra.model.ospfv3.ExtRtSum")
    meta.concreteSubClasses.add("cobra.model.dpp.Class")
    meta.concreteSubClasses.add("cobra.model.ipv6.Nexthop")
    meta.concreteSubClasses.add("cobra.model.bgp.RtCtrlMapP")
    meta.concreteSubClasses.add("cobra.model.rtmap.Rule")
    meta.concreteSubClasses.add("cobra.model.l2.EpRetPol")
    meta.concreteSubClasses.add("cobra.model.ospfv3.InterAreaRtSum")
    meta.concreteSubClasses.add("cobra.model.ospfv3.LsaLeakP")
    meta.concreteSubClasses.add("cobra.model.ospf.MaxLsaP")
    meta.concreteSubClasses.add("cobra.model.eigrp.InterLeakP")
    meta.concreteSubClasses.add("cobra.model.rtextcom.Entry")
    meta.concreteSubClasses.add("cobra.model.eigrp.StubDef")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetOspfNssa")
    meta.concreteSubClasses.add("cobra.model.ipv4.NexthopStub")
    meta.concreteSubClasses.add("cobra.model.rtregcom.Rule")
    meta.concreteSubClasses.add("cobra.model.ac.RuleArp")
    meta.concreteSubClasses.add("cobra.model.isis.InterLeakP")
    meta.concreteSubClasses.add("cobra.model.eigrp.DefRtLeakP")
    meta.concreteSubClasses.add("cobra.model.qosp.Dot1pRule")
    meta.concreteSubClasses.add("cobra.model.rtregcom.Entry")
    meta.concreteSubClasses.add("cobra.model.ospf.InterLeakP")
    meta.concreteSubClasses.add("cobra.model.actrl.Rule")
    meta.concreteSubClasses.add("cobra.model.eigrp.StubPol")
    meta.concreteSubClasses.add("cobra.model.qosp.Class")
    meta.concreteSubClasses.add("cobra.model.ipv4.Route")
    meta.concreteSubClasses.add("cobra.model.eigrp.RtSum")
    meta.concreteSubClasses.add("cobra.model.actrl.PfxEntry")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetMetricType")
    meta.concreteSubClasses.add("cobra.model.isis.DefRtLeakP")
    meta.concreteSubClasses.add("cobra.model.igmpsnoop.QuerierP")
    meta.concreteSubClasses.add("cobra.model.eigrp.RtMetricAlterP")
    meta.concreteSubClasses.add("cobra.model.ospfv3.SpfComp")
    meta.concreteSubClasses.add("cobra.model.eigrp.Gr")
    meta.concreteSubClasses.add("cobra.model.eigrp.StubP")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtSrc")
    meta.concreteSubClasses.add("cobra.model.bgp.RttP")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetPref")
    meta.concreteSubClasses.add("cobra.model.ospfv3.Gr")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetOspfFwdAddr")
    meta.concreteSubClasses.add("cobra.model.ospf.LsaLeakP")
    meta.concreteSubClasses.add("cobra.model.mldsnoop.QuerierSt")
    meta.concreteSubClasses.add("cobra.model.ac.RuleMac")
    meta.concreteSubClasses.add("cobra.model.bfd.AuthP")
    meta.concreteSubClasses.add("cobra.model.isis.MeshGrp")
    meta.concreteSubClasses.add("cobra.model.qosp.DscpRule")
    meta.concreteSubClasses.add("cobra.model.ospf.LsaLeakCtrlP")
    meta.concreteSubClasses.add("cobra.model.topoctrl.VirtDom")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetWeight")
    meta.concreteSubClasses.add("cobra.model.eigrp.RtCtrlP")
    meta.concreteSubClasses.add("cobra.model.copp.MatchProto")
    meta.concreteSubClasses.add("cobra.model.ospfv3.LsaCtrl")
    meta.concreteSubClasses.add("cobra.model.ospf.LsaCtrl")
    meta.concreteSubClasses.add("cobra.model.ospfv3.LeakCtrlP")
    meta.concreteSubClasses.add("cobra.model.ac.RuleIp")
    meta.concreteSubClasses.add("cobra.model.rtextcom.Item")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchOspfArea")
    meta.concreteSubClasses.add("cobra.model.l3.IpCktEp")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtPervasive")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetExtComm")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetRtTag")
    meta.concreteSubClasses.add("cobra.model.isis.Gr")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetMetric")
    meta.concreteSubClasses.add("cobra.model.igmpsnoop.QuerierSt")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRegComm")
    meta.concreteSubClasses.add("cobra.model.eqpt.ConsoleP")
    meta.concreteSubClasses.add("cobra.model.mldsnoop.QuerierP")
    meta.concreteSubClasses.add("cobra.model.ospf.Gr")
    meta.concreteSubClasses.add("cobra.model.ospfv3.MaxLsaP")
    meta.concreteSubClasses.add("cobra.model.rtmap.Entry")
    meta.concreteSubClasses.add("cobra.model.ospf.AuthP")
    meta.concreteSubClasses.add("cobra.model.bgp.RtSum")
    meta.concreteSubClasses.add("cobra.model.topoctrl.ShardRdnP")
    meta.concreteSubClasses.add("cobra.model.eigrp.SummDef")
    meta.concreteSubClasses.add("cobra.model.ospf.InterAreaRtSum")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtDst")
    meta.concreteSubClasses.add("cobra.model.ipv6.Route")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetRtDist")
    meta.concreteSubClasses.add("cobra.model.copp.Class")
    meta.concreteSubClasses.add("cobra.model.ospfv3.DefRtLeakP")
    meta.concreteSubClasses.add("cobra.model.rtmap.MatchRtTag")
    meta.concreteSubClasses.add("cobra.model.ospf.ExtRtSum")
    meta.concreteSubClasses.add("cobra.model.snmp.Ctx")
    meta.concreteSubClasses.add("cobra.model.rtextcom.Rule")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetRttComm")
    meta.concreteSubClasses.add("cobra.model.ospfv3.LsaLeakCtrlP")
    meta.concreteSubClasses.add("cobra.model.rtmap.SetNh")
    meta.concreteSubClasses.add("cobra.model.actrl.MgmtRule")
    meta.concreteSubClasses.add("cobra.model.ospf.SpfComp")
    meta.concreteSubClasses.add("cobra.model.qosp.IpRule")

    meta.rnPrefixes = [
    ]

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "descr", "descr", 5581, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "name", "name", 4991, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 64)]
    prop.regex = ['[a-zA-Z0-9_.:-]+']
    meta.props.add("name", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
