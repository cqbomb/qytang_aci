# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class CitizenAdj(Mo):
    """
    The adjacency to the citizen node.

    """

    meta = ClassMeta("cobra.model.coop.CitizenAdj")

    meta.moClassName = "coopCitizenAdj"
    meta.rnFormat = "citizen-[%(addr)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Citizen Adjacency"
    meta.writeAccessMask = 0x8008020040001
    meta.readAccessMask = 0x8008020040001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.coop.Dom")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.AdjEp")
    meta.superClasses.add("cobra.model.l3.ProtAdjEp")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.ProtAdjEp")
    meta.superClasses.add("cobra.model.coop.AdjEp")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('citizen-', True),
    ]

    prop = PropMeta("str", "addr", "addr", 5995, PropCategory.REGULAR)
    prop.label = "Address"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("addr", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "ctrl", "ctrl", 2451, PropCategory.REGULAR)
    prop.label = "Controls"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("gr-enabled", "graceful-restart-enabled", 1)
    prop._addConstant("vpc-enabled", "vpc-enabled", 2)
    meta.props.add("ctrl", prop)

    prop = PropMeta("str", "curVersion", "curVersion", 18409, PropCategory.REGULAR)
    prop.label = "Current Running Version"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("curVersion", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "flags", "flags", 2456, PropCategory.REGULAR)
    prop.label = "Flags"
    prop.isOper = True
    prop._addConstant("full-council", "full-council-member", 8)
    prop._addConstant("hold-down", "in-hold-down-state", 2)
    prop._addConstant("oracle-up", "oracle-reachability-up", 4)
    prop._addConstant("rr-up", "route-reachability-up", 1)
    prop._addConstant("slow-rcvr", "slow-receiver", 16)
    meta.props.add("flags", prop)

    prop = PropMeta("str", "grTime", "grTime", 2452, PropCategory.REGULAR)
    prop.label = "Graceful Restart Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 600
    prop.defaultValueStr = "600"
    meta.props.add("grTime", prop)

    prop = PropMeta("str", "helloIntvl", "helloIntvl", 2450, PropCategory.REGULAR)
    prop.label = "Hello Interval"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 65535)]
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("helloIntvl", prop)

    prop = PropMeta("str", "lastContact", "lastContact", 2455, PropCategory.REGULAR)
    prop.label = "Last Contact"
    prop.isOper = True
    meta.props.add("lastContact", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "maxVersion", "maxVersion", 18408, PropCategory.REGULAR)
    prop.label = "Maximum Version Supported"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("maxVersion", prop)

    prop = PropMeta("str", "minVersion", "minVersion", 18407, PropCategory.REGULAR)
    prop.label = "Minimum Version Supported"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("v1", "v1", 1)
    prop._addConstant("v2", "v2", 2)
    meta.props.add("minVersion", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 15781, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 2453, PropCategory.REGULAR)
    prop.label = "Operational State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 2454, PropCategory.REGULAR)
    prop.label = "Operational State Qualifier"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unspecified"
    prop._addConstant("peer-congested", "peer-congested", 4)
    prop._addConstant("peer-inactive", "peer-inactive", 3)
    prop._addConstant("route-unreachable", "route-not-reachable", 1)
    prop._addConstant("tcp-down", "tcp-connection-down", 2)
    prop._addConstant("unspecified", "unspecified", 0)
    prop._addConstant("up", "up", 5)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vip", "vip", 2458, PropCategory.REGULAR)
    prop.label = "Virtual IP"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("vip", prop)

    prop = PropMeta("str", "vpcPeer", "vpcPeer", 2457, PropCategory.REGULAR)
    prop.label = "VPC Peer"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("vpcPeer", prop)

    meta.namingProps.append(getattr(meta.props, "addr"))
    getattr(meta.props, "addr").needDelimiter = True

    def __init__(self, parentMoOrDn, addr, markDirty=True, **creationProps):
        namingVals = [addr]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
