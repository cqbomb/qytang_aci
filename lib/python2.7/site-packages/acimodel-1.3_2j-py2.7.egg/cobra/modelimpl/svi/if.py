# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class If(Mo):
    """
    A routed VLAN interface.

    """

    meta = ClassMeta("cobra.model.svi.If")

    meta.moClassName = "sviIf"
    meta.rnFormat = "svi-[%(id)s]"
    meta.category = MoCategory.REGULAR
    meta.label = "Routed Vlan Interface"
    meta.writeAccessMask = 0x600401002001
    meta.readAccessMask = 0x8608421042001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.dpp.IngrDropHist1w")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist1year")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist1d")
    meta.childClasses.add("cobra.model.l2.IngrPkts1qtr")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist5min")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist1h")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1w")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1year")
    meta.childClasses.add("cobra.model.l2.EgrBytes5min")
    meta.childClasses.add("cobra.model.l2.IngrBytes1w")
    meta.childClasses.add("cobra.model.l2.EgrBytes1year")
    meta.childClasses.add("cobra.model.l3.RsL3If")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1mo")
    meta.childClasses.add("cobra.model.l2.IngrBytes1h")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1h")
    meta.childClasses.add("cobra.model.l2.EgrPkts1year")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist15min")
    meta.childClasses.add("cobra.model.rmon.Dot1d")
    meta.childClasses.add("cobra.model.l2.EgrPkts15min")
    meta.childClasses.add("cobra.model.rmon.IpIn")
    meta.childClasses.add("cobra.model.l2.IngrBytes1year")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist15min")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist5min")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist15min")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist5min")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1year")
    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.l2.EgrPkts1mo")
    meta.childClasses.add("cobra.model.l3.RtPseudoIf")
    meta.childClasses.add("cobra.model.l2.EgrBytes1mo")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1qtr")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist1mo")
    meta.childClasses.add("cobra.model.rmon.Ipv6IfStats")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1year")
    meta.childClasses.add("cobra.model.l2.EgrBytes1qtr")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1mo")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1qtr")
    meta.childClasses.add("cobra.model.rmon.Dot3Stats")
    meta.childClasses.add("cobra.model.dpp.IngrDrop15min")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1qtr")
    meta.childClasses.add("cobra.model.l2.IngrPkts1mo")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1mo")
    meta.childClasses.add("cobra.model.rmon.IfHCOut")
    meta.childClasses.add("cobra.model.l2.IngrPkts15min")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1year")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist15min")
    meta.childClasses.add("cobra.model.l2.IngrPkts1d")
    meta.childClasses.add("cobra.model.l2.IngrPkts1h")
    meta.childClasses.add("cobra.model.rmon.IfHCIn")
    meta.childClasses.add("cobra.model.l2.IngrBytes1qtr")
    meta.childClasses.add("cobra.model.l2.EgrPkts1w")
    meta.childClasses.add("cobra.model.l2.EgrPkts1h")
    meta.childClasses.add("cobra.model.l2.IngrBytes15min")
    meta.childClasses.add("cobra.model.l2.IngrPkts1w")
    meta.childClasses.add("cobra.model.l2.EgrPkts1d")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1w")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist5min")
    meta.childClasses.add("cobra.model.dpp.IngrAllow15min")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1d")
    meta.childClasses.add("cobra.model.l2.IngrBytesHist1h")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1year")
    meta.childClasses.add("cobra.model.dpp.IngrDrop5min")
    meta.childClasses.add("cobra.model.l2.IngrPkts5min")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1mo")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist15min")
    meta.childClasses.add("cobra.model.rmon.IfStorm")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1mo")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist5min")
    meta.childClasses.add("cobra.model.health.Inst")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1d")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1qtr")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1w")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1year")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1h")
    meta.childClasses.add("cobra.model.dpp.IngrAllow1d")
    meta.childClasses.add("cobra.model.l2.IngrBytes1d")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1year")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist15min")
    meta.childClasses.add("cobra.model.rmon.EtherStats")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1mo")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist1qtr")
    meta.childClasses.add("cobra.model.l2.IngrBytes1mo")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1qtr")
    meta.childClasses.add("cobra.model.dpp.IngrAllow5min")
    meta.childClasses.add("cobra.model.dpp.IngrDrop1qtr")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1h")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1mo")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1w")
    meta.childClasses.add("cobra.model.l2.EgrBytes15min")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1d")
    meta.childClasses.add("cobra.model.rmon.IfIn")
    meta.childClasses.add("cobra.model.l2.IngrBytes5min")
    meta.childClasses.add("cobra.model.rmon.IfOut")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1h")
    meta.childClasses.add("cobra.model.dpp.IngrDropHist5min")
    meta.childClasses.add("cobra.model.l2.EgrPktsHist1d")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1w")
    meta.childClasses.add("cobra.model.l2.EgrBytes1d")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1w")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1w")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1h")
    meta.childClasses.add("cobra.model.l2.EgrBytesHist1qtr")
    meta.childClasses.add("cobra.model.l2.EgrBytes1h")
    meta.childClasses.add("cobra.model.l2.EgrPkts5min")
    meta.childClasses.add("cobra.model.l2.IngrPktsHist1d")
    meta.childClasses.add("cobra.model.l2.EgrBytes1w")
    meta.childClasses.add("cobra.model.l2.EgrPkts1qtr")
    meta.childClasses.add("cobra.model.nw.RtPathToIf")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1d")
    meta.childClasses.add("cobra.model.dpp.IngrAllowHist1h")
    meta.childClasses.add("cobra.model.l2.IngrPkts1year")

    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist15min", "HDdppIngrAllow15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1year", "HDdppIngrAllow1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1year", "HDdppIngrDrop1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1year", "HDl2IngrBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist5min", "HDdppIngrAllow5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist15min", "HDl2IngrBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1qtr", "HDdppIngrAllow1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist15min", "HDdppIngrDrop15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow15min", "CDdppIngrAllow15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1year", "CDdppIngrAllow1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1year", "CDl2IngrBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist15min", "HDl2EgrBytes15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist5min", "HDl2IngrBytes5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1year", "CDdppIngrDrop1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1qtr", "HDl2IngrBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop15min", "CDdppIngrDrop15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1year", "HDl2EgrBytes1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes15min", "CDl2IngrBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1qtr", "CDdppIngrAllow1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1year", "HDl2IngrPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist15min", "HDl2IngrPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1mo", "HDdppIngrAllow1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1qtr", "HDdppIngrDrop1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow5min", "CDdppIngrAllow5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist5min", "HDdppIngrDrop5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1year", "CDl2EgrBytes1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1mo", "HDdppIngrDrop1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1mo", "HDl2IngrBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts15min", "CDl2IngrPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1qtr", "CDl2IngrBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist5min", "HDl2EgrBytes5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop5min", "CDdppIngrDrop5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1mo", "CDdppIngrAllow1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist15min", "HDl2EgrPkts15min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist5min", "HDl2IngrPkts5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1year", "HDl2EgrPkts1year-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1qtr", "HDl2IngrPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1qtr", "CDdppIngrDrop1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes15min", "CDl2EgrBytes15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes5min", "CDl2IngrBytes5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1w", "HDdppIngrAllow1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1qtr", "HDl2EgrBytes1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1d", "HDdppIngrAllow1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllowHist1h", "HDdppIngrAllow1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1year", "CDl2IngrPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1w", "HDdppIngrDrop1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1d", "HDdppIngrDrop1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1qtr", "CDl2IngrPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist5min", "HDl2EgrPkts5min-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDropHist1h", "HDdppIngrDrop1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes5min", "CDl2EgrBytes5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1mo", "CDdppIngrDrop1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1year", "CDl2EgrPkts1year"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts15min", "CDl2EgrPkts15min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1qtr", "CDl2EgrBytes1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1qtr", "HDl2EgrPkts1qtr-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1mo", "HDl2EgrBytes1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1w", "HDl2IngrBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1d", "HDl2IngrBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytesHist1h", "HDl2IngrBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts5min", "CDl2IngrPkts5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1w", "CDdppIngrAllow1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1h", "CDdppIngrAllow1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrAllow1d", "CDdppIngrAllow1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1mo", "CDl2IngrBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1mo", "HDl2IngrPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1w", "CDdppIngrDrop1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1w", "CDl2IngrBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1h", "CDl2IngrBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1h", "CDdppIngrDrop1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1mo", "CDl2EgrBytes1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1mo", "CDl2IngrPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1mo", "HDl2EgrPkts1mo-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.dpp.IngrDrop1d", "CDdppIngrDrop1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrBytes1d", "CDl2IngrBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1h", "HDl2EgrBytes1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1d", "HDl2EgrBytes1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytesHist1w", "HDl2EgrBytes1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1w", "HDl2IngrPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1h", "HDl2IngrPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts5min", "CDl2EgrPkts5min"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPktsHist1d", "HDl2IngrPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1qtr", "CDl2EgrPkts1qtr"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1mo", "CDl2EgrPkts1mo"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.Ipv6IfStats", "dbgIpv6IfStats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1d", "CDl2IngrPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1h", "CDl2IngrPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.IngrPkts1w", "CDl2IngrPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1w", "HDl2EgrPkts1w-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1h", "HDl2EgrPkts1h-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPktsHist1d", "HDl2EgrPkts1d-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1d", "CDl2EgrBytes1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1h", "CDl2EgrBytes1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrBytes1w", "CDl2EgrBytes1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1w", "CDl2EgrPkts1w"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1h", "CDl2EgrPkts1h"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l2.EgrPkts1d", "CDl2EgrPkts1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.EtherStats", "dbgEtherStats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.Dot3Stats", "dbgDot3Stats"))
    meta.childNamesAndRnPrefix.append(("cobra.model.nw.RtPathToIf", "rtpathToIf-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.RtPseudoIf", "rtpseudoIf"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IfHCOut", "dbgIfHCOut"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IfStorm", "dbgIfStorm"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IfHCIn", "dbgIfHCIn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.Dot1d", "dbgDot1d"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IfOut", "dbgIfOut"))
    meta.childNamesAndRnPrefix.append(("cobra.model.l3.RsL3If", "rsl3If-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IpIn", "dbgIpIn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.rmon.IfIn", "dbgIfIn"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.l2.BD")

    meta.superClasses.add("cobra.model.nw.ConnEp")
    meta.superClasses.add("cobra.model.nw.If")
    meta.superClasses.add("cobra.model.nw.Conn")
    meta.superClasses.add("cobra.model.nw.LogicalIf")
    meta.superClasses.add("cobra.model.nw.Item")
    meta.superClasses.add("cobra.model.l3.If")
    meta.superClasses.add("cobra.model.nw.Ep")

    meta.rnPrefixes = [
        ('svi-', True),
    ]

    prop = PropMeta("str", "adminSt", "adminSt", 4269, PropCategory.REGULAR)
    prop.label = "Admin State"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("up", "up", 2)
    meta.props.add("adminSt", prop)

    prop = PropMeta("str", "bw", "bw", 4258, PropCategory.REGULAR)
    prop.label = "Bandwidth"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 400000000)]
    prop.defaultValue = 10000000
    prop.defaultValueStr = "10000000"
    meta.props.add("bw", prop)

    prop = PropMeta("str", "carDel", "carDel", 4259, PropCategory.REGULAR)
    prop.label = "Carrier Delay"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(0, 60000)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("carDel", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "delay", "delay", 4257, PropCategory.REGULAR)
    prop.label = "Delay"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 16777215)]
    prop.defaultValue = 1
    prop.defaultValueStr = "1"
    meta.props.add("delay", prop)

    prop = PropMeta("str", "descr", "descr", 5585, PropCategory.REGULAR)
    prop.label = "Description"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(0, 128)]
    prop.regex = ['[a-zA-Z0-9\\!#$%()*,-./:;@ _{|}~?&+]+']
    meta.props.add("descr", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "id", "id", 7227, PropCategory.REGULAR)
    prop.label = "Interface ID"
    prop.isConfig = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    prop.isNaming = True
    meta.props.add("id", prop)

    prop = PropMeta("str", "inbMgmt", "inbMgmt", 4263, PropCategory.REGULAR)
    prop.label = "Inband Management Enabled?"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = False
    prop.defaultValueStr = "no"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("inbMgmt", prop)

    prop = PropMeta("str", "iod", "iod", 4268, PropCategory.REGULAR)
    prop.label = "Interface Ordinal"
    prop.isOper = True
    meta.props.add("iod", prop)

    prop = PropMeta("str", "lcOwn", "lcOwn", 9, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "local"
    prop._addConstant("implicit", "implicit", 4)
    prop._addConstant("local", "local", 0)
    prop._addConstant("policy", "policy", 1)
    prop._addConstant("replica", "replica", 2)
    prop._addConstant("resolveOnBehalf", "resolvedonbehalf", 3)
    meta.props.add("lcOwn", prop)

    prop = PropMeta("str", "loadIntvl1", "loadIntvl1", 4260, PropCategory.REGULAR)
    prop.label = "Load-averaging Interval 1"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(60, 600)]
    prop.defaultValue = 600
    prop.defaultValueStr = "600"
    meta.props.add("loadIntvl1", prop)

    prop = PropMeta("str", "loadIntvl2", "loadIntvl2", 4261, PropCategory.REGULAR)
    prop.label = "Load-averaging Interval 2"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(60, 600)]
    prop.defaultValue = 60
    prop.defaultValueStr = "60"
    meta.props.add("loadIntvl2", prop)

    prop = PropMeta("str", "loadIntvl3", "loadIntvl3", 4262, PropCategory.REGULAR)
    prop.label = "Load-averaging Interval 3"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(60, 600)]
    prop.defaultValue = 10
    prop.defaultValueStr = "10"
    meta.props.add("loadIntvl3", prop)

    prop = PropMeta("str", "mac", "mac", 4253, PropCategory.REGULAR)
    prop.label = "MAC Address of the SVI"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("mac", prop)

    prop = PropMeta("str", "medium", "medium", 4254, PropCategory.REGULAR)
    prop.label = "Medium Type"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "bcast"
    prop._addConstant("bcast", "broadcast", 0)
    prop._addConstant("p2p", "p2p", 1)
    meta.props.add("medium", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 14568, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "mtu", "mtu", 4255, PropCategory.REGULAR)
    prop.label = "MTU of the SVI"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(64, 9216)]
    prop.defaultValue = 9000
    prop.defaultValueStr = "9000"
    meta.props.add("mtu", prop)

    prop = PropMeta("str", "mtuInherit", "mtuInherit", 4256, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = True
    prop.defaultValueStr = "yes"
    prop._addConstant("no", None, False)
    prop._addConstant("yes", None, True)
    meta.props.add("mtuInherit", prop)

    prop = PropMeta("str", "name", "name", 16432, PropCategory.REGULAR)
    prop.label = "Name"
    prop.isConfig = True
    prop.isAdmin = True
    prop.range = [(1, 128)]
    meta.props.add("name", prop)

    prop = PropMeta("str", "operSt", "operSt", 4265, PropCategory.REGULAR)
    prop.label = "SVI Operational State"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 2)
    prop._addConstant("out-of-srvc", "out-of-service", 4)
    prop._addConstant("shutdown", "shutdown", 3)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("up", "up", 1)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 4266, PropCategory.REGULAR)
    prop.label = "Reason for Operational State Being Down"
    prop.isOper = True
    prop.defaultValue = 0
    prop.defaultValueStr = "unknown"
    prop._addConstant("admin-shut", "administratively-shut-down", 1)
    prop._addConstant("bad-vlan_t", "invalid-vlan-type", 3)
    prop._addConstant("hwprog-fles", "hardware-programming-failed-(event-sequence)", 6)
    prop._addConstant("hwprog-flfm", "hardware-programming-failed-(l2fm)", 5)
    prop._addConstant("inbMgmt-cfg-fail", "inbmgmt-config-failed", 16)
    prop._addConstant("int-vlan-create-fail", "interface-vlan-create-process-failed", 15)
    prop._addConstant("l2st-change", "underlying-l2-interface-state-us-down", 11)
    prop._addConstant("macalloc-fail", "mac-address-allocation-failed", 13)
    prop._addConstant("mtuprog-fail", "mtu-programming-failed", 9)
    prop._addConstant("no-vlan", "vlan-does-not-exist.", 2)
    prop._addConstant("nonrouted-vdc", "non-routable-vdc-mode", 14)
    prop._addConstant("oos", "out-of-service", 7)
    prop._addConstant("reinit", "service-is-down-or-being-brought-down", 8)
    prop._addConstant("suspended", "operationally-shut-down", 12)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("vlan-down", "vlan-is-down", 4)
    prop._addConstant("vrf-unusable", "vrf-not-usable", 10)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "osSum", "osSum", 4264, PropCategory.REGULAR)
    prop.label = "SVI Operational State Summary"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "ok"
    prop._addConstant("degraded", "degraded", 3)
    prop._addConstant("failed", "failed", 0)
    prop._addConstant("initializing", "initializing", 1)
    prop._addConstant("ok", "ok", 4)
    prop._addConstant("resetting", "resetting", 2)
    meta.props.add("osSum", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vlanId", "vlanId", 4252, PropCategory.REGULAR)
    prop.label = "VLAN ID Associated with the SVI"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.range = [(1, 4095)]
    prop.defaultValue = 0
    prop.defaultValueStr = "0"
    meta.props.add("vlanId", prop)

    prop = PropMeta("str", "vlanT", "vlanT", 4267, PropCategory.REGULAR)
    prop.label = "VLAN Type"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "bd-regular"
    prop._addConstant("bd-control", "bd-control", 3)
    prop._addConstant("bd-external", "bd-external", 4)
    prop._addConstant("bd-regular", "bd-regular", 1)
    prop._addConstant("bd-reserved", "bd-reserved", 2)
    prop._addConstant("ckt-vlan", "vlan-circuit", 5)
    prop._addConstant("ckt-vxlan", "vxlan-circuit", 6)
    meta.props.add("vlanT", prop)

    prop = PropMeta("str", "vmac", "vmac", 21179, PropCategory.REGULAR)
    prop.label = "Virtual MAC Address of the SVI"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("vmac", prop)

    meta.namingProps.append(getattr(meta.props, "id"))
    getattr(meta.props, "id").needDelimiter = True

    meta.deploymentCategory = DeploymentCategory("interface", "Interface")
    def __init__(self, parentMoOrDn, id, markDirty=True, **creationProps):
        namingVals = [id]
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
