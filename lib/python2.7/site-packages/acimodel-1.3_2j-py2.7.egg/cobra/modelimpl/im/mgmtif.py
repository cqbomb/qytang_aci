# coding=UTF-8
# **********************************************************************
# Copyright (c) 2013-2016 Cisco Systems, Inc. All rights reserved
# written by zen warriors, do not modify!
# **********************************************************************


from cobra.mit.meta import ClassMeta
from cobra.mit.meta import StatsClassMeta
from cobra.mit.meta import CounterMeta
from cobra.mit.meta import PropMeta
from cobra.mit.meta import Category
from cobra.mit.meta import SourceRelationMeta
from cobra.mit.meta import NamedSourceRelationMeta
from cobra.mit.meta import TargetRelationMeta
from cobra.mit.meta import DeploymentPathMeta, DeploymentCategory
from cobra.model.category import MoCategory, PropCategory, CounterCategory
from cobra.mit.mo import Mo


# ##################################################
class MgmtIf(Mo):
    """
    The runtime state of a management interface.

    """

    meta = ClassMeta("cobra.model.im.MgmtIf")

    meta.moClassName = "imMgmtIf"
    meta.rnFormat = "mgmt"
    meta.category = MoCategory.REGULAR
    meta.label = "Managment Interface"
    meta.writeAccessMask = 0x100000000001
    meta.readAccessMask = 0x100000000001
    meta.isDomainable = False
    meta.isReadOnly = True
    meta.isConfigurable = False
    meta.isDeletable = False
    meta.isContextRoot = False

    meta.childClasses.add("cobra.model.fault.Inst")
    meta.childClasses.add("cobra.model.fault.Counts")
    meta.childClasses.add("cobra.model.health.Inst")

    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Counts", "fltCnts"))
    meta.childNamesAndRnPrefix.append(("cobra.model.fault.Inst", "fault-"))
    meta.childNamesAndRnPrefix.append(("cobra.model.health.Inst", "health"))

    meta.parentClasses.add("cobra.model.mgmt.MgmtIf")

    meta.rnPrefixes = [
        ('mgmt', False),
    ]

    prop = PropMeta("str", "backplaneMac", "backplaneMac", 3993, PropCategory.REGULAR)
    prop.label = "Port Backplane Mac"
    prop.isOper = True
    meta.props.add("backplaneMac", prop)

    prop = PropMeta("str", "childAction", "childAction", 4, PropCategory.CHILD_ACTION)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("deleteAll", "deleteall", 16384)
    prop._addConstant("deleteNonPresent", "deletenonpresent", 8192)
    prop._addConstant("ignore", "ignore", 4096)
    meta.props.add("childAction", prop)

    prop = PropMeta("str", "createSig", "createSig", 3999, PropCategory.REGULAR)
    prop.label = "Per Vdc Create Signature"
    prop.isOper = True
    meta.props.add("createSig", prop)

    prop = PropMeta("str", "dn", "dn", 1, PropCategory.DN)
    prop.label = "None"
    prop.isDn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("dn", prop)

    prop = PropMeta("str", "iod", "iod", 3997, PropCategory.REGULAR)
    prop.label = "Iod"
    prop.isOper = True
    meta.props.add("iod", prop)

    prop = PropMeta("str", "lastLinkStChg", "lastLinkStChg", 4000, PropCategory.REGULAR)
    prop.label = "Last Link State Change"
    prop.isOper = True
    meta.props.add("lastLinkStChg", prop)

    prop = PropMeta("str", "modTs", "modTs", 7, PropCategory.REGULAR)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop.defaultValue = 0
    prop.defaultValueStr = "never"
    prop._addConstant("never", "never", 0)
    meta.props.add("modTs", prop)

    prop = PropMeta("str", "monPolDn", "monPolDn", 22028, PropCategory.REGULAR)
    prop.label = "Monitoring policy attached to this observable object"
    prop.isImplicit = True
    prop.isAdmin = True
    meta.props.add("monPolDn", prop)

    prop = PropMeta("str", "operDuplex", "operDuplex", 3991, PropCategory.REGULAR)
    prop.label = "Operational Duplex"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "auto"
    prop._addConstant("auto", "auto", 1)
    prop._addConstant("full", "full", 2)
    prop._addConstant("half", "half", 3)
    meta.props.add("operDuplex", prop)

    prop = PropMeta("str", "operMtu", "operMtu", 3996, PropCategory.REGULAR)
    prop.label = "Operational Mtu"
    prop.isOper = True
    prop.range = [(576, 9216)]
    prop.defaultValue = 9000
    prop.defaultValueStr = "9000"
    meta.props.add("operMtu", prop)

    prop = PropMeta("str", "operPhyLayer", "operPhyLayer", 3992, PropCategory.REGULAR)
    prop.label = "Operational Physical Port Layer"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "ethernet"
    prop._addConstant("eobc", "eobc", 5)
    prop._addConstant("ethernet", "ethernet", 2)
    prop._addConstant("max", "max", 8)
    prop._addConstant("mgmt", "mgmt", 6)
    prop._addConstant("sup-inband", "sup-inband", 4)
    meta.props.add("operPhyLayer", prop)

    prop = PropMeta("str", "operRouterMac", "operRouterMac", 3994, PropCategory.REGULAR)
    prop.label = "Operational Port Router Mac"
    prop.isOper = True
    meta.props.add("operRouterMac", prop)

    prop = PropMeta("str", "operSpeed", "operSpeed", 3990, PropCategory.REGULAR)
    prop.label = "Operational Port Speed"
    prop.isOper = True
    prop.defaultValue = 7
    prop.defaultValueStr = "inherit"
    prop._addConstant("100G", "100-gbps", 6)
    prop._addConstant("100M", "100-mbps", 1)
    prop._addConstant("10G", "10-gbps", 3)
    prop._addConstant("1G", "1-gbps", 2)
    prop._addConstant("25G", "25-gbps", 4)
    prop._addConstant("40G", "40-gbps", 5)
    prop._addConstant("inherit", "inherit", 7)
    prop._addConstant("unknown", "unspecified", 0)
    meta.props.add("operSpeed", prop)

    prop = PropMeta("str", "operSt", "operSt", 3988, PropCategory.REGULAR)
    prop.label = "Operational Port State"
    prop.isOper = True
    prop.defaultValue = 1
    prop.defaultValueStr = "down"
    prop._addConstant("down", "down", 1)
    prop._addConstant("link-up", "link-up", 3)
    prop._addConstant("unknown", "unknown", 0)
    prop._addConstant("up", "up", 2)
    meta.props.add("operSt", prop)

    prop = PropMeta("str", "operStQual", "operStQual", 3989, PropCategory.REGULAR)
    prop.label = "Operational Port Status Reason"
    prop.isOper = True
    prop.defaultValue = 2
    prop.defaultValueStr = "admin-down"
    prop._addConstant("admin-config-change", "admincfgchng", 44)
    prop._addConstant("admin-down", "disabled", 2)
    prop._addConstant("auth-fail", "xcvrauthfailed", 54)
    prop._addConstant("auth-pending", "authpending", 55)
    prop._addConstant("bpdu-guard-err-disable", "bpduguard-errdisable", 72)
    prop._addConstant("cap-absent", "capabsent", 49)
    prop._addConstant("channel-admin-down", "channeldown", 24)
    prop._addConstant("channel-err-disabled", "channel-error-disabled-err-disabled", 25)
    prop._addConstant("channel-membership-update-in-progress", "channelupdate", 28)
    prop._addConstant("configuration-incomplete", "incomplete-config", 79)
    prop._addConstant("diag-failure-errdisable", "diag-failure-errdisable", 80)
    prop._addConstant("domain-max-retransmission-failure", "isolated", 38)
    prop._addConstant("epm-learn-err-disable", "epmlearn-errdisable", 76)
    prop._addConstant("err-disabled", "err-disabled", 9)
    prop._addConstant("err-disabled-ip-conflict", "conflcterrdis", 18)
    prop._addConstant("ethernet-interface-down", "interface-parentethdown", 43)
    prop._addConstant("ethernet-link-down", "parentethdown", 42)
    prop._addConstant("fabric-track", "fabrictrack", 78)
    prop._addConstant("fail", "fail", 4)
    prop._addConstant("fcot-chksum-err", "sfp-checksum-error", 67)
    prop._addConstant("fcot-no-present", "fcotabsent", 32)
    prop._addConstant("fcot-vendor-not-supported", "sfp-vendor-not-supported-err-disabled", 33)
    prop._addConstant("fex-sfp-invalid", "fex-fabric-sfp-invalid", 60)
    prop._addConstant("handshake-fail-errdisable", "intfailerrdis", 74)
    prop._addConstant("hot-standby-in-bundle", "htstdbyinbndl", 73)
    prop._addConstant("hw-fail", "faulty", 7)
    prop._addConstant("inactive", "inactive", 23)
    prop._addConstant("incompatible-admin-mode", "errdisabledincompatportmode-err-disabled", 34)
    prop._addConstant("incompatible-admin-speed", "errdisabledincompatportspeed-err-disabled", 35)
    prop._addConstant("incompatible-fecmode", "errdisabledincompatfecmode-err-disabled", 81)
    prop._addConstant("initializing", "init", 22)
    prop._addConstant("interface-removed", "ifremoved", 31)
    prop._addConstant("invalid-sat-fabric-if", "invalidfbif", 59)
    prop._addConstant("ipqos-dcbxp-compat-failure", "ipqosdcbxpcompatfailure", 19)
    prop._addConstant("link-down", "parentethdown", 3)
    prop._addConstant("link-failure", "notconnect", 20)
    prop._addConstant("link-flap-err", "linkflaperr", 17)
    prop._addConstant("link-up", "link-up-connected", 6)
    prop._addConstant("loopback-diag-failure", "faulty", 11)
    prop._addConstant("loopback-isolation", "isolated", 39)
    prop._addConstant("mac-pinning", "macpinning", 77)
    prop._addConstant("mcp-loop-err-disable", "mcploop-errdisable", 75)
    prop._addConstant("module-removed", "modremoved", 45)
    prop._addConstant("no-license", "portlicntavl", 5)
    prop._addConstant("non-sticky-externally-disabled", "servdisab", 65)
    prop._addConstant("none", "connected", 47)
    prop._addConstant("offline", "offline", 21)
    prop._addConstant("parent-admin-down", "admindown-parentdown", 30)
    prop._addConstant("parent-down", "parentdown", 29)
    prop._addConstant("port-channel-members-down", "noopermembers", 41)
    prop._addConstant("proto-port-suspend", "portsuspnd", 27)
    prop._addConstant("router-mac-failure", "routrmacfail", 63)
    prop._addConstant("sat-fabric-if-down", "fabrcifdown", 58)
    prop._addConstant("sat-incompat-topo", "fex-identity-mismatch", 52)
    prop._addConstant("sat-not-configured", "fex-not-configured", 53)
    prop._addConstant("sdp-timeout", "sdp-timeout/sfp-mismatch", 51)
    prop._addConstant("sfp-eth-compliant-err", "xcvrethcomplianceerr", 50)
    prop._addConstant("sfp-missing", "sfpabsent", 10)
    prop._addConstant("sfp-speed-mismatch", "xcvrspeedmismatch", 66)
    prop._addConstant("suspend-by-mtu", "mtufailure", 61)
    prop._addConstant("suspend-by-vpc", "suspndbyvpc", 62)
    prop._addConstant("suspended", "suspnd", 26)
    prop._addConstant("suspended-by-mode", "suspended-by-mode", 36)
    prop._addConstant("suspended-by-speed", "suspended-by-speed", 37)
    prop._addConstant("suspended-due-to-minlinks", "suspendedminlinks", 56)
    prop._addConstant("suspended-due-to-no-lacp-pdus", "suspended(no-lacp-pdus)", 57)
    prop._addConstant("sw-fail", "faulty", 8)
    prop._addConstant("udld-aggressive-mode-link-failed", "udldaggr", 16)
    prop._addConstant("udld-empty-echo", "udldempecho", 15)
    prop._addConstant("udld-neighbor-mismatch", "udldmismatch", 14)
    prop._addConstant("udld-tx-rx-loop", "udldloop", 13)
    prop._addConstant("udld-unidir-detected", "udldunidir", 12)
    prop._addConstant("unknown", "down", 0)
    prop._addConstant("up", "up", 1)
    prop._addConstant("upgrade-in-progress", "modupgrade", 40)
    prop._addConstant("vpc-cfg-in-progress", "vpcconfiginprogress", 70)
    prop._addConstant("vpc-no-response-from-peer", "norespfrmvpc", 71)
    prop._addConstant("vpc-peer-link-down", "vpcpeerlinkdown", 69)
    prop._addConstant("vrf-unusable", "vrfunusable", 46)
    prop._addConstant("xcvr-auth-failed", "xcvrauthfailed", 64)
    prop._addConstant("xcvr-initializing", "sfpinit", 48)
    prop._addConstant("xcvr-invalid", "transceiver-validation-failed", 68)
    meta.props.add("operStQual", prop)

    prop = PropMeta("str", "osSum", "osSum", 3987, PropCategory.REGULAR)
    prop.label = "Operational State Summary"
    prop.isOper = True
    prop.defaultValue = 4
    prop.defaultValueStr = "ok"
    prop._addConstant("degraded", "degraded", 3)
    prop._addConstant("failed", "failed", 0)
    prop._addConstant("initializing", "initializing", 1)
    prop._addConstant("ok", "ok", 4)
    prop._addConstant("resetting", "resetting", 2)
    meta.props.add("osSum", prop)

    prop = PropMeta("str", "portInitEvalFlag", "portInitEvalFlag", 3995, PropCategory.REGULAR)
    prop.label = "Port Init Eval Flag"
    prop.isOper = True
    meta.props.add("portInitEvalFlag", prop)

    prop = PropMeta("str", "rn", "rn", 2, PropCategory.RN)
    prop.label = "None"
    prop.isRn = True
    prop.isImplicit = True
    prop.isAdmin = True
    prop.isCreateOnly = True
    meta.props.add("rn", prop)

    prop = PropMeta("str", "status", "status", 3, PropCategory.STATUS)
    prop.label = "None"
    prop.isImplicit = True
    prop.isAdmin = True
    prop._addConstant("created", "created", 2)
    prop._addConstant("deleted", "deleted", 8)
    prop._addConstant("modified", "modified", 4)
    meta.props.add("status", prop)

    prop = PropMeta("str", "vdcId", "vdcId", 3998, PropCategory.REGULAR)
    prop.label = "Vdc Id"
    prop.isOper = True
    prop.range = [(1, 4096)]
    meta.props.add("vdcId", prop)

    def __init__(self, parentMoOrDn, markDirty=True, **creationProps):
        namingVals = []
        Mo.__init__(self, parentMoOrDn, markDirty, *namingVals,  **creationProps)



# End of package file
# ##################################################
